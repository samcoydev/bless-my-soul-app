version: '3'

services:
  angular-app:
    build: 
      context: ${FRONTEND_PATH}
      dockerfile: ./Dockerfile-development
    restart: unless-stopped
    volumes:
      - ~/.gitconfig:/etc/gitconfig
      - ${FRONTEND_PATH}/src:/usr/src/app/src:cached
      - ${FRONTEND_PATH}/e2e:/usr/src/app/e2e:cached
      - ${FRONTEND_PATH}/tsconfig.json:/usr/src/app/tsconfig.json
      - ${FRONTEND_PATH}/tslint.json:/usr/src/app/tslint.json
      - ${FRONTEND_PATH}/package.json:/usr/src/app/package.json'
    depends_on:
      - "spring-app"
    ports:
      - "4200:4200"
    networks:
      - database-network

  spring-app:
    build: ${BACKEND_PATH}
    restart: unless-stopped
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/${DB_NAME}
      - SPRING_DATASOURCE_USERNAME=${DB_USER}
      - SPRING_DATASOURCE_PASSWORD=${DB_PASSWORD}
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    depends_on:
      - "db"
    ports:
      - "3000:3000"
    networks:
      - database-network

  db:
    image: 'postgres:13.1-alpine'
    container_name: db
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    restart: unless-stopped
    networks:
      - database-network

  minio:
    image: minio/minio
    command: server --console-address ":9001" /data
    environment:
      MINIO_ROOT_USER: ${MINIO_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_PASS}
    volumes:
      - minio_storage:/data
    networks:
      - database-network
    ports:
      - "9000:9000"
      - "9001:9001"


volumes:
  minio_storage: {}

networks:
  database-network:
    driver: bridge